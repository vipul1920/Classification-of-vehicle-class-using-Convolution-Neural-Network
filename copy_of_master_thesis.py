# -*- coding: utf-8 -*-
"""Copy of Master Thesis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11oz5iP3BRY5QKJbiWiMo4aqZgi3VdPhO
"""

!pip install tensorflow-gpu==1.15

!python --version

import gdown

url = 'https://drive.google.com/uc?id=1NLOBQmV6QZpP_c7-693ug0X-bqBpeJLE'
#url = 'https://drive.google.com/uc?id=1YGAMsi_E6w6LnyXZy9gf9SecPMFv_c9g'
output = '/usr/local/cudnn-10.1-linux-x64-v7.6.5.32 (1).tgz'
gdown.download(url, output, quiet=False)

# Commented out IPython magic to ensure Python compatibility.
#we are installing the cuDNN that we dropped in our google drive
# %cd /usr/local/
!tar -xzvf "cudnn-10.1-linux-x64-v7.6.5.32 (1).tgz"

!chmod a+r /usr/local/cuda/include/cudnn.h
!cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2

# %cd /content/

#check the cv2 version, another key component of darknet
import cv2
cv2.__version__

#take a look at the kind of GPU we have
!nvidia-smi

#double check the cuDNN install
!nvcc -V

!python3 -c 'import tensorflow as tf; print(tf.__version__)'

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/Thesis

!pip install pillow
!pip install lxml
!pip install Cython
!pip install matplotlib
!pip install pandas
!pip install contextlib2

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/Thesis

!git clone https://github.com/tensorflow/models.git

!pip install cloud-annotations==0.0.4
!pip install tf_slim
!pip install lvis
!pip install --no-deps tensorflowjs==1.4.0

# Commented out IPython magic to ensure Python compatibility.
import os
import pathlib
# %cd /content/drive/My Drive/Thesis/models/research
!protoc object_detection/protos/*.proto --python_out=.

pwd = os.getcwd()
os.environ['PYTHONPATH'] += f':{pwd}:{pwd}/slim'

# Commented out IPython magic to ensure Python compatibility.
import os
import pathlib

# Clone the tensorflow models repository if it doesn't already exist
if "models" in pathlib.Path.cwd().parts:
  while "models" in pathlib.Path.cwd().parts:
    os.chdir('..')
elif not pathlib.Path('models').exists():
  !git clone --depth 1 git clone https://github.com/tensorflow/models.git

!pip install cloud-annotations==0.0.4
!pip install tf_slim
!pip install lvis
!pip install --no-deps tensorflowjs==1.4.0

# %cd /content/drive/My Drive/Thesis/models/research
!protoc object_detection/protos/*.proto --python_out=.

pwd = os.getcwd()
os.environ['PYTHONPATH'] += f':{pwd}:{pwd}/slim'

!apt-get -y install protobuf-compiler python-pil python-lxml

!export PYTHONPATH="/content/drive/MyDrive/Thesis/models"
!export PYTHONPATH="/content/drive/MyDrive/Thesis/models/research"
!export PYTHONPATH="/content/drive/MyDrive/Thesis/models/research/slim"
!export PYTHONPATH="/content/drive/MyDrive/Thesis/models/research/object_detection"

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/Thesis/models/research/

!python setup.py build
!python setup.py install

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/Thesis/models/research/slim/
! export PYTHONPATH=$PYTHONPATH:pwd:pwd/slim
!python setup.py build
!python setup.py install

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/Thesis/models/research/object_detection/images/

!wget http://imagenet.stanford.edu/internal/car196/car_ims.tgz
!wget http://imagenet.stanford.edu/internal/car196/cars_annos.mat

!tar -xf car_ims.tgz

!python labelmap.py cars_annos.mat

!python mat2cv.py cars_annos.mat stanford_cars_labels.csv

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/Thesis/models/research/object_detection/
!ls

!python generatetfrecord.py --data_dir=images/ --set=train --output_path=stanford_cars_train.tfrecord --csv=images/stanford_cars_labels.csv --label_map_path=images/stanford_cars_label_map.pbtxt

!python generatetfrecord.py --data_dir=images/ --set=test --output_path=stanford_cars_test.tfrecord --csv=images/stanford_cars_labels.csv --label_map_path=images/stanford_cars_label_map.pbtxt

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/Thesis/models/

!tar -xvf ssd_mobilenet_v2_coco_2018_03_29.tar.gz

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/Thesis/

!pip install tf_slim

!pip install lvis

!python models/research/object_detection/model_main.py --pipeline_config_path=models/ssd_mobilenet_v2_coco_2018_03_29/pipeline.config --model_dir=output --num_train_steps=100000 --num_eval_steps=100

!python -u /content/drive/MyDrive/Thesis/models/research/object_detection/export_inference_graph.py --input_type=image_tensor --pipeline_config_path=./models/ssd_mobilenet_v2_coco_2018_03_29/pipeline.config --trained_checkpoint_prefix=output/model.ckpt-100000 --output_directory=./stanford_cars_inference_graph

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/Thesis/

!python predict_image.py --model stanford_cars_inference_graph/frozen_inference_graph.pb --labels ./models/research/object_detection/images/stanford_cars_label_map.pbtxt --image image6.jpg